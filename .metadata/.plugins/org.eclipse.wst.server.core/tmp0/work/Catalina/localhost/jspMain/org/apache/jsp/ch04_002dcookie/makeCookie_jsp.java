/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.72
 * Generated at: 2017-01-05 05:22:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.ch04_002dcookie;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class makeCookie_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- \r\n");
      out.write("쿠키(Cookie)\r\n");
      out.write("웹브라우저에서 서버로 어떤 데이터를 요청하면 서버측에서는 알맞은 로직을 수행한 후 데이터를\r\n");
      out.write("웹 브라우저로 응답해 줍니다.\r\n");
      out.write("그리고, 서버는 웹브라우저와의 관계를 종료합니다.\r\n");
      out.write("이렇게, 웹브라우저에 응답 한 후 연결을 끊는 것(Connectless)은 HTTP프로토콜의 특징입니다.\r\n");
      out.write("연결이 끊겼을 때 어떤 정보를 지속적으로 유지하기 위한 수단으로 쿠키라는 방식을 사용합니다.\r\n");
      out.write("\r\n");
      out.write("광고,홍보 마케팅으로 이용\r\n");
      out.write("접속 통계\r\n");
      out.write("맞춤정보 제공\r\n");
      out.write("\r\n");
      out.write("cookie.setMaxAge(초단위*60)\r\n");
      out.write(" - 쿠키의 유효시간 설정\r\n");
      out.write(" - 쿠키의 유효시간을 지정하면 클라이언트 영역에 파일을 생성해서 쿠키 정보를 보관하게 됩니다.\r\n");
      out.write(" - 브라우저를 닫아도 지정된 시간만큼 쿠키파일은 유지되고, 설정한 시간이 지나야 파일이 삭제됩니다.\r\n");
      out.write("\r\n");
      out.write("cookie.setMaxAge(-1)\r\n");
      out.write(" - 쿠키파일을 생성하지 않습니다. 메모리에 쿠키정보를 보관\r\n");
      out.write(" - 브라우저를 닫으면 쿠키정보가 소멸됩니다.\r\n");
      out.write("\r\n");
      out.write(" -->\r\n");
      out.write("\r\n");

	Cookie cookie = new Cookie("cookieName", "cookieValue");	//쿠키생성자(쿠키이름,쿠키값)
	
	cookie.setMaxAge(30*60);
	
	response.addCookie(cookie);

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("쿠키명: ");
      out.print( cookie.getName() );
      out.write("\r\n");
      out.write("쿠키값: ");
      out.print( cookie.getValue() );
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
